{
  "Blog": [
    {
      "id": "react-swr",
      "title": "آموزش SWR در React: مدیریت داده‌ها و کشینگ هوشمند",
      "excerpt": "SWR یک کتابخانه قدرتمند برای مدیریت داده‌ها، کشینگ و revalidation در اپلیکیشن‌های React است. این راهنما به شما نشان می‌دهد چگونه با SWR داده‌ها را بهینه دریافت کنید، کش کنید و به روز رسانی نمایید.",
      "content": "<section class=\"mb-12\">\n <h1 class=\"text-3xl md:text-4xl font-extrabold text-transparent bg-clip-text bg-gradient-to-r from-blue-400 to-teal-400 text-center mb-4\">آموزش SWR در React</h1>\n <p class=\"text-slate-400 text-center mb-8 max-w-full text-base sm:text-lg leading-relaxed\">SWR (مخفف Stale-While-Revalidate) یک استراتژی کشینگ است که توسط Vercel توسعه داده شده و تجربه کار با داده‌ها در React را متحول کرده است.</p>\n</section>\n\n<section id=\"intro\" class=\"mb-12 px-2\">\n <h2 class=\"text-xl sm:text-2xl font-bold text-blue-400 border-r-4 border-blue-400 pr-3 mb-4\">SWR چیست؟</h2>\n <p class=\"text-slate-400 mb-4 text-base leading-relaxed\">SWR یک کتابخانه سبک وزن برای مدیریت داده‌ها در React است که سه ویژگی کلیدی ارائه می‌دهد:</p>\n <ul class=\"list-disc text-slate-400 mb-4 pl-6 space-y-2\">\n  <li>کشینگ خودکار داده‌ها</li>\n  <li>Revalidation در پس‌زمینه</li>\n  <li>تکرار خودکار در فواصل زمانی</li>\n </ul>\n <p class=\"text-slate-400 mb-4 text-base leading-relaxed\">این کتابخانه به شما کمک می‌کند بدون پیچیدگی، داده‌های بهینه‌شده و همیشه به روز داشته باشید.</p>\n</section>\n\n<section id=\"installation\" class=\"mb-12 px-2\">\n <h2 class=\"text-xl sm:text-2xl font-bold text-blue-400 border-r-4 border-blue-400 pr-3 mb-4\">نصب و راه‌اندازی</h2>\n <p class=\"text-slate-400 mb-4 text-base leading-relaxed\">برای شروع کار با SWR، ابتدا آن را در پروژه خود نصب کنید:</p>\n <div class=\"bg-slate-900 rounded-lg p-4 mb-6 overflow-x-auto text-xs sm:text-sm\" style=\"direction: ltr; text-align: left;\">\n <pre><code class=\"lang-bash text-slate-300\">npm install swr</code></pre>\n </div>\n <p class=\"text-slate-400 mb-4 text-base leading-relaxed\">سپس در کامپوننت مورد نظر آن را import کنید:</p>\n <div class=\"bg-slate-900 rounded-lg p-4 overflow-x-auto text-xs sm:text-sm\" style=\"direction: ltr; text-align: left;\">\n <pre><code class=\"lang-jsx text-slate-300\">import useSWR from 'swr'</code></pre>\n </div>\n</section>\n\n<section id=\"basic-usage\" class=\"mb-12 px-2\">\n <h2 class=\"text-xl sm:text-2xl font-bold text-blue-400 border-r-4 border-blue-400 pr-3 mb-4\">استفاده پایه</h2>\n \n <h3 class=\"text-lg font-semibold text-blue-300 mb-3\">دریافت داده‌ها با useSWR</h3>\n <p class=\"text-slate-400 mb-4 text-base leading-relaxed\">کامپوننت useSWR برای دریافت و مدیریت داده‌ها استفاده می‌شود:</p>\n <div class=\"bg-slate-900 rounded-lg p-4 mb-6 overflow-x-auto text-xs sm:text-sm\" style=\"direction: ltr; text-align: left;\">\n <pre><code class=\"lang-jsx text-slate-300\">import useSWR from 'swr'\n\nconst fetcher = (...args) => fetch(...args).then(res => res.json())\n\nfunction Profile() {\n  const { data, error } = useSWR('/api/user', fetcher)\n\n  if (error) return <div>خطا در بارگذاری داده‌ها</div>\n  if (!data) return <div>در حال بارگذاری...</div>\n\n  return (\n    <div>\n      <h1>{data.name}</h1>\n      <p>{data.email}</p>\n    </div>\n  )\n}</code></pre>\n </div>\n \n <h3 class=\"text-lg font-semibold text-blue-300 mb-3\">گزینه‌های SWR</h3>\n <p class=\"text-slate-400 mb-4 text-base leading-relaxed\">می‌توانید رفتار SWR را با گزینه‌های مختلف سفارشی کنید:</p>\n <div class=\"bg-slate-900 rounded-lg p-4 overflow-x-auto text-xs sm:text-sm\" style=\"direction: ltr; text-align: left;\">\n <pre><code class=\"lang-jsx text-slate-300\">const { data, error } = useSWR('/api/user', fetcher, {\n  revalidateOnFocus: false, // غیرفعال کردن revalidate هنگام فوکوس پنجره\n  refreshInterval: 3000, // به‌روزرسانی خودکار هر 3 ثانیه\n  onErrorRetry: (error, key, config, revalidate, { retryCount }) => {\n    // فقط 5 بار تلاش مجدد\n    if (retryCount >= 5) return\n    // پس از 5 ثانیه دوباره تلاش کن\n    setTimeout(() => revalidate({ retryCount }), 5000)\n  }\n})</code></pre>\n </div>\n</section>\n\n<section id=\"advanced-features\" class=\"mb-12 px-2\">\n <h2 class=\"text-xl sm:text-2xl font-bold text-blue-400 border-r-4 border-blue-400 pr-3 mb-4\">ویژگی‌های پیشرفته</h2>\n \n <h3 class=\"text-lg font-semibold text-blue-300 mb-3\">گلوبال کانفیگ</h3>\n <p class=\"text-slate-400 mb-4 text-base leading-relaxed\">می‌توانید تنظیمات پیش‌فرض برای تمام useSWRها تعریف کنید:</p>\n <div class=\"bg-slate-900 rounded-lg p-4 mb-6 overflow-x-auto text-xs sm:text-sm\" style=\"direction: ltr; text-align: left;\">\n <pre><code class=\"lang-jsx text-slate-300\">import { SWRConfig } from 'swr'\n\nfunction App() {\n  return (\n    <SWRConfig \n      value={{\n        fetcher: (resource, init) => fetch(resource, init).then(res => res.json()),\n        refreshInterval: 3000,\n        onError: (error, key) => {\n          if (error.status !== 403 && error.status !== 404) {\n            // ارسال به سرویس گزارش خطا\n          }\n        }\n      }}\n    >\n      <MyComponent />\n    </SWRConfig>\n  )\n}</code></pre>\n </div>\n \n <h3 class=\"text-lg font-semibold text-blue-300 mb-3\">Mutation و به‌روزرسانی داده‌ها</h3>\n <p class=\"text-slate-400 mb-4 text-base leading-relaxed\">برای به‌روزرسانی داده‌ها می‌توانید از mutate استفاده کنید:</p>\n <div class=\"bg-slate-900 rounded-lg p-4 overflow-x-auto text-xs sm:text-sm\" style=\"direction: ltr; text-align: left;\">\n <pre><code class=\"lang-jsx text-slate-300\">import useSWR, { mutate } from 'swr'\n\nfunction Profile() {\n  const { data } = useSWR('/api/user', fetcher)\n\n  const handleUpdate = async () => {\n    const newName = 'نام جدید'\n    \n    // به‌روزرسانی موقت UI\n    mutate('/api/user', { ...data, name: newName }, false)\n    \n    // ارسال درخواست به سرور\n    await fetch('/api/user', {\n      method: 'POST',\n      body: JSON.stringify({ name: newName })\n    })\n    \n    // revalidate برای دریافت داده‌های تازه\n    mutate('/api/user')\n  }\n\n  return (\n    <div>\n      <h1>{data.name}</h1>\n      <button onClick={handleUpdate}>به‌روزرسانی نام</button>\n    </div>\n  )\n}</code></pre>\n </div>\n</section>\n\n<section id=\"pagination\" class=\"mb-12 px-2\">\n <h2 class=\"text-xl sm:text-2xl font-bold text-blue-400 border-r-4 border-blue-400 pr-3 mb-4\">صفحه‌بندی (Pagination)</h2>\n <p class=\"text-slate-400 mb-4 text-base leading-relaxed\">مدیریت داده‌های صفحه‌بندی شده با SWR بسیار ساده است:</p>\n <div class=\"bg-slate-900 rounded-lg p-4 mb-6 overflow-x-auto text-xs sm:text-sm\" style=\"direction: ltr; text-align: left;\">\n <pre><code class=\"lang-jsx text-slate-300\">function Page({ index }) {\n  const { data } = useSWR(`/api/data?page=${index}`, fetcher)\n\n  return data ? (\n    <ul>\n      {data.items.map(item => (\n        <li key={item.id}>{item.name}</li>\n      ))}\n    </ul>\n  ) : <div>در حال بارگذاری...</div>\n}\n\nfunction App() {\n  const [pageIndex, setPageIndex] = useState(1)\n\n  return (\n    <div>\n      <Page index={pageIndex} />\n      <button onClick={() => setPageIndex(pageIndex - 1)}>صفحه قبل</button>\n      <button onClick={() => setPageIndex(pageIndex + 1)}>صفحه بعد</button>\n    </div>\n  )\n}</code></pre>\n </div>\n <p class=\"text-slate-400 mb-4 text-base leading-relaxed\">SWR به صورت خودکار داده‌های صفحات مختلف را کش می‌کند و تجربه کاربری روانی ایجاد می‌کند.</p>\n</section>\n\n<section id=\"prefetching\" class=\"mb-12 px-2\">\n <h2 class=\"text-xl sm:text-2xl font-bold text-blue-400 border-r-4 border-blue-400 pr-3 mb-4\">Prefetching داده‌ها</h2>\n <p class=\"text-slate-400 mb-4 text-base leading-relaxed\">می‌توانید داده‌ها را پیش‌از نیاز کاربر prefetch کنید:</p>\n <div class=\"bg-slate-900 rounded-lg p-4 overflow-x-auto text-xs sm:text-sm\" style=\"direction: ltr; text-align: left;\">\n <pre><code class=\"lang-jsx text-slate-300\">import { mutate } from 'swr'\n\nfunction Link({ href }) {\n  const prefetch = () => {\n    mutate(href, fetch(href).then(res => res.json()))\n  }\n\n  return (\n    <Link \n      to={href}\n      onMouseEnter={() => prefetch()}\n    >\n      لینک\n    </Link>\n  )\n}</code></pre>\n </div>\n</section>\n\n<section id=\"conclusion\" class=\"mb-12 px-2\">\n <h2 class=\"text-xl sm:text-2xl font-bold text-blue-400 border-r-4 border-blue-400 pr-3 mb-4\">جمع‌بندی</h2>\n <div class=\"bg-slate-800 rounded-xl p-5\">\n <p class=\"text-slate-400 text-sm\">SWR یک کتابخانه قدرتمند برای مدیریت داده‌ها در React است که با استراتژی Stale-While-Revalidate تجربه کاربری بهتری ارائه می‌دهد. در این آموزش با مباحث پایه و پیشرفته SWR شامل دریافت داده‌ها، کشینگ، revalidation، mutation، صفحه‌بندی و prefetching آشنا شدید. SWR با سادگی و انعطاف‌پذیری خود می‌تواند جایگزین مناسبی برای روش‌های سنتی مدیریت داده در React باشد.</p>\n </div>\n</section>",
      "image": {
        "src": "https://uploadkon.ir/uploads/b23e23_25SWR-react.png",
        "alt": "SWR در React",
        "title": "SWR در React"
      },
      "category": "ReactJS",
      "date": "1403/04/26",
      "author": "محمد علی سماوات",
      "tags": [
        "React",
        "SWR",
        "مدیریت داده در React",
        "کشینگ",
        "Stale-While-Revalidate",
        "useSWR",
        "mutate",
        "revalidation",
        "پیش‌بارگذاری داده",
        "صفحه‌بندی",
        "آموزش SWR",
        "آموزش مدیریت داده در React",
        "بهینه‌سازی درخواست‌ها",
        "کتابخانه‌های React",
        "Vercel SWR",
        "آموزش useSWR",
        "آموزش SWR در React",
        "SWR در Next.js",
        "مقایسه SWR و React Query"
      ]
    }
  ]
}