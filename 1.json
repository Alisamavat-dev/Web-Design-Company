{
  "Blog": [
    {
      "id": "react-props",
      "title": "آموزش جامع Props در React: انتقال داده بین کامپوننت‌ها",
      "excerpt": "پراپس (Props) یکی از مفاهیم پایه‌ای React است که امکان ارتباط بین کامپوننت‌ها و انتقال داده را فراهم می‌کند. این راهنما به شما یاد می‌دهد چگونه از props به صورت حرفه‌ای استفاده کنید.",
      "content": "<section class=\"mb-12\">\n <h1 class=\"text-3xl md:text-4xl font-extrabold text-transparent bg-clip-text bg-gradient-to-r from-blue-400 to-indigo-400 text-center mb-4\">آموزش Props در React</h1>\n <p class=\"text-slate-400 text-center mb-8 max-w-full text-base sm:text-lg leading-relaxed\">پراپس (Properties) مکانیسمی در React برای انتقال داده از کامپوننت والد به فرزند است. با استفاده از props می‌توانید کامپوننت‌های قابل استفاده مجدد و ماژولار بسازید که ارتباط واضحی بین یکدیگر دارند.</p>\n</section>\n\n<section id=\"intro\" class=\"mb-12 px-2\">\n <h2 class=\"text-xl sm:text-2xl font-bold text-blue-400 border-r-4 border-blue-400 pr-3 mb-4\">Props چیست؟</h2>\n <p class=\"text-slate-400 mb-4 text-base leading-relaxed\">پراپس در React مانند پارامترهای یک تابع عمل می‌کنند. آنها راهی برای انتقال داده از کامپوننت والد به فرزند هستند و به کامپوننت‌ها اجازه می‌دهند با یکدیگر ارتباط برقرار کنند.</p>\n</section>\n\n<section id=\"basic-usage\" class=\"mb-12 px-2\">\n <h2 class=\"text-xl sm:text-2xl font-bold text-blue-400 border-r-4 border-blue-400 pr-3 mb-4\">استفاده پایه از Props</h2>\n <p class=\"text-slate-400 mb-4 text-base leading-relaxed\">مثال ساده ارسال و دریافت props:</p>\n <div class=\"bg-slate-900 rounded-lg p-4 mb-6 overflow-x-auto text-xs sm:text-sm\" style=\"direction: ltr; text-align: left;\">\n <pre><code class=\"lang-jsx text-slate-300\">// کامپوننت والد\nfunction App() {\n return <Welcome name=\"علی\" age={25} />;\n}\n\n// کامپوننت فرزند\nfunction Welcome(props) {\n return (\n <div>\n <h1>سلام، {props.name}!</h1>\n <p>سن شما: {props.age}</p>\n </div>\n );\n}</code></pre>\n </div>\n <p class=\"text-slate-400 mb-4 text-base leading-relaxed\">در مثال بالا، کامپوننت <code>App</code> دو prop به نام‌های <code>name</code> و <code>age</code> به کامپوننت <code>Welcome</code> ارسال می‌کند.</p>\n</section>\n\n<section id=\"destructuring\" class=\"mb-12 px-2\">\n <h2 class=\"text-xl sm:text-2xl font-bold text-blue-400 border-r-4 border-blue-400 pr-3 mb-4\">Destructuring Props</h2>\n <p class=\"text-slate-400 mb-4 text-base leading-relaxed\">می‌توانید مستقیماً propها را در پارامترهای تابع destruct کنید:</p>\n <div class=\"bg-slate-900 rounded-lg p-4 mb-6 overflow-x-auto text-xs sm:text-sm\" style=\"direction: ltr; text-align: left;\">\n <pre><code class=\"lang-jsx text-slate-300\">function Welcome({ name, age }) {\n return (\n <div>\n <h1>سلام، {name}!</h1>\n <p>سن شما: {age}</p>\n </div>\n );\n}</code></pre>\n </div>\n <p class=\"text-slate-400 mb-4 text-base leading-relaxed\">این روش خوانایی کد را افزایش می‌دهد و نیاز به نوشتن مکرر <code>props.</code> را از بین می‌برد.</p>\n</section>\n\n<section id=\"default-props\" class=\"mb-12 px-2\">\n <h2 class=\"text-xl sm:text-2xl font-bold text-blue-400 border-r-4 border-blue-400 pr-3 mb-4\">مقادیر پیش‌فرض برای Props</h2>\n <p class=\"text-slate-400 mb-4 text-base leading-relaxed\">می‌توانید برای propها مقدار پیش‌فرض تعیین کنید:</p>\n <div class=\"bg-slate-900 rounded-lg p-4 mb-6 overflow-x-auto text-xs sm:text-sm\" style=\"direction: ltr; text-align: left;\">\n <pre><code class=\"lang-jsx text-slate-300\">// روش اول: استفاده از پارامترهای پیش‌فرض\nfunction Welcome({ name = 'کاربر مهمان', age = 18 }) {\n // ...\n}\n\n// روش دوم: استفاده از defaultProps\nWelcome.defaultProps = {\n name: 'کاربر مهمان',\n age: 18\n};</code></pre>\n </div>\n</section>\n\n<section id=\"children-prop\" class=\"mb-12 px-2\">\n <h2 class=\"text-xl sm:text-2xl font-bold text-blue-400 border-r-4 border-blue-400 pr-3 mb-4\">Children Prop</h2>\n <p class=\"text-slate-400 mb-4 text-base leading-relaxed\">prop ویژه <code>children</code> به شما اجازه می‌دهد محتوای بین تگ‌های کامپوننت را دریافت کنید:</p>\n <div class=\"bg-slate-900 rounded-lg p-4 mb-6 overflow-x-auto text-xs sm:text-sm\" style=\"direction: ltr; text-align: left;\">\n <pre><code class=\"lang-jsx text-slate-300\">function Card({ children }) {\n return <div className=\"card\">{children}</div>;\n}\n\n// استفاده\nfunction App() {\n return (\n <Card>\n <h2>عنوان کارت</h2>\n <p>محتوای کارت</p>\n </Card>\n );\n}\n\n// استفاده\nfunction App() {\n return (\n <Card>\n <h2>عنوان کارت</h2>\n <p>محتوای کارت</p>\n </Card>\n );\n}\n</code></pre>\n </div>\n</section>\n\n<section id=\"prop-types\" class=\"mb-12 px-2\">\n <h2 class=\"text-xl sm:text-2xl font-bold text-blue-400 border-r-4 border-blue-400 pr-3 mb-4\">اعتبارسنجی Props با PropTypes</h2>\n <p class=\"text-slate-400 mb-4 text-base leading-relaxed\">برای اعتبارسنجی نوع propها می‌توانید از کتابخانه <code>prop-types</code> استفاده کنید:</p>\n <div class=\"bg-slate-900 rounded-lg p-4 mb-6 overflow-x-auto text-xs sm:text-sm\" style=\"direction: ltr; text-align: left;\">\n <pre><code class=\"lang-jsx text-slate-300\">import PropTypes from 'prop-types';\n\nfunction UserProfile({ name, age, isAdmin }) {\n // ...\n}\n\nUserProfile.propTypes = {\n name: PropTypes.string.isRequired,\n age: PropTypes.number,\n isAdmin: PropTypes.bool\n};\n\nUserProfile.defaultProps = {\n isAdmin: false\n};</code></pre>\n </div>\n <p class=\"text-slate-400 mb-4 text-base leading-relaxed\">این کار به شناسایی باگ‌ها در مراحل اولیه توسعه کمک می‌کند.</p>\n</section>\n\n<section id=\"advanced-usage\" class=\"mb-12 px-2\">\n <h2 class=\"text-xl sm:text-2xl font-bold text-blue-400 border-r-4 border-blue-400 pr-3 mb-4\">استفاده‌های پیشرفته</h2>\n \n <h3 class=\"text-lg font-semibold text-blue-300 mb-3\">ارسال توابع به عنوان Prop</h3>\n <p class=\"text-slate-400 mb-4 text-base leading-relaxed\">می‌توانید توابع را به عنوان prop ارسال کنید:</p>\n <div class=\"bg-slate-900 rounded-lg p-4 mb-6 overflow-x-auto text-xs sm:text-sm\" style=\"direction: ltr; text-align: left;\">\n <pre><code class=\"lang-jsx text-slate-300\">function Parent() {\n const handleClick = () => {\n console.log('دکمه کلیک شد!');\n };\n\n return <Child onClick={handleClick} />;\n}\n\nfunction Child({ onClick }) {\n return <button onClick={onClick}>کلیک کن</button>;\n}\n\n// استفاده\nfunction App() {\n return (\n <Card>\n <h2>عنوان کارت</h2>\n <p>محتوای کارت</p>\n </Card>\n );\n}\n</code></pre>\n </div>\n \n <h3 class=\"text-lg font-semibold text-blue-300 mb-3\">Spread Operator برای Props</h3>\n <p class=\"text-slate-400 mb-4 text-base leading-relaxed\">می‌توانید از spread operator برای ارسال چندین prop استفاده کنید:</p>\n <div class=\"bg-slate-900 rounded-lg p-4 overflow-x-auto text-xs sm:text-sm\" style=\"direction: ltr; text-align: left;\">\n <pre><code class=\"lang-jsx text-slate-300\">const user = {\n name: 'علی',\n age: 25,\n role: 'مدیر'\n};\n\nfunction App() {\n return <UserProfile {...user} />;\n}</code></pre>\n </div>\n</section>\n\n<section id=\"conclusion\" class=\"mb-12 px-2\">\n <h2 class=\"text-xl sm:text-2xl font-bold text-blue-400 border-r-4 border-blue-400 pr-3 mb-4\">جمع‌بندی</h2>\n <div class=\"bg-slate-800 rounded-xl p-5\">\n <p class=\"text-slate-400 text-sm\">پراپس یکی از پایه‌ای‌ترین مفاهیم React است که درک صحیح آن برای ساخت برنامه‌های کارآمد ضروری است. با استفاده از props می‌توانید کامپوننت‌های قابل استفاده مجدد و ماژولار بسازید که ارتباط واضحی بین یکدیگر دارند. یادگیری استفاده صحیح از props به شما کمک می‌کند کدهای تمیزتر و قابل نگهداری‌تری بنویسید.</p>\n </div>\n</section>",
      "image": {
        "src": "https://uploadkon.ir/uploads/e3a5a3_react-props.png",
        "alt": "React Props",
        "title": "React Props"
      },
      "category": "ReactJS",
      "date": "1403/04/15",
      "author": "محمد علی سماوات",
      "tags": [
        "React",
        "Props",
        "کامپوننت‌ها",
        "Data Flow",
        "PropTypes",
        "آموزش React",
        "کامپوننت‌های قابل استفاده مجدد",
        "JSX",
        "Component Communication"
      ]
    }
  ]
}
